/* Given the mapping a = 1, b = 2, ... z = 26, and an encoded message, count the number of ways it can be decoded.

For example, the message '111' would give 3, since it could be decoded as 'aaa', 'ka', and 'ak'.

You can assume that the messages are decodable. For example, '001' is not allowed.*/




import java.util.Scanner;

public class CountDecodings {
	static int countDecoding(char[] digits, int n) {
		if (n == 0 || n == 1) 
			return 1; 
		if(digits[0]=='0') 
			return 0;
		int count = 0; 
		if (digits[n - 1] > '0')
			count = countDecoding(digits, n - 1); 
		if (digits[n - 2] == '1' || (digits[n - 2] == '2' && digits[n - 1] < '7')) count += countDecoding(digits, n - 2); 
		return count; 
	} 


public static void main(String[] args) 
{ 
	Scanner sc= new Scanner(System.in);
	int n=sc.nextInt();
	char digits[] = new char[10]; 
	for(int i=0;i<n;i++) {
		digits[i]=sc.next().charAt(i);
	}
	System.out.printf("Count is %d", countDecoding(digits, n)); 
	} 
} 

input:
3
111
output:3
input:
3
001
output:
0
